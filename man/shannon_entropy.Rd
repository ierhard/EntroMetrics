% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shannon_entropy.R
\name{shannon_entropy}
\alias{shannon_entropy}
\title{Shannon Entropy Point and Confidence Interval Estimation}
\usage{
shannon_entropy(
  bin_counts,
  pt_method = c("ML", "MM", "Dirichlet", "Jeffrey", "Laplace", "SG", "minimax",
    "multiple"),
  pt_method_args = NULL,
  ci_method = c("Wald", "Wald_alt", "Dirichlet", "bootstrap_pct", "bootstrap_t",
    "multiple"),
  ci_method_args = NULL,
  multiple_methods = NULL,
  unit = c("log2", "ln", "normalize"),
  conf_level = 0.95,
  ...
)
}
\arguments{
\item{bin_counts}{A numeric vector of non-negative values representing the
counts or frequencies in each bin. Zero counts are allowed.}

\item{pt_method}{Character string specifying the point estimation method for
entropy. Options are:
\itemize{
\item \code{"ML"}: Maximum Likelihood (plugin estimator)
\item \code{"MM"}: Miller-Madow
\item \code{"Dirichlet"}: Dirichlet prior
\item \code{"Jeffrey"}: Jeffrey prior
\item \code{"Laplace"}: Laplace prior
\item \code{"SG"}: Sch√ºrmann-Grassberger
\item \code{"minimax"}: Minimax prior
\item \code{"multiple"}: Combine multiple methods.
}}

\item{pt_method_args}{Optional list of arguments specific to the chosen
\code{pt_method}. Default is \code{NULL}.}

\item{ci_method}{Character string specifying the confidence interval (CI)
estimation method. Options are:
\itemize{
\item \code{"automatic"}: Automatically selects the best CI method.
\item \code{"Wald"}: Wald interval.
\item \code{"Wald_alt"}: Alternative method based on asymptotic normality Basharin's variance approximation.
\item \code{"bootstrap_pct"}: Percentile bootstrap.
\item \code{"bootstrap_t"}: Bootstrap-t interval.
\item \code{"bootstrap_bca"}: Bias-corrected and accelerated bootstrap.
\item \code{"multiple"}: Combine multiple CI methods.
}}

\item{ci_method_args}{Optional list of arguments specific to the chosen
\code{ci_method}. Default is \code{NULL}.}

\item{multiple_methods}{A list of lists defining combinations of point and
CI methods to calculate. Each element of the list should specify a
\code{pt_method}, \code{pt_method_args}, \code{ci_method}, and \code{ci_method_args}. Default
is \code{NULL}.}

\item{unit}{Character string specifying the unit of entropy. Options are:
\itemize{
\item \code{"log2"}: Bits (base 2 logarithm).
\item \code{"ln"}: Nats (natural logarithm).
\item \code{"normalize"}: Normalized entropy.
}}

\item{conf_level}{Numeric value between 0 and 1 specifying the confidence
level for interval estimation. Default is \code{0.95}.}

\item{...}{Shared arguments. These will be passed to all entropy point estimator
functions and CI method functions with matching argument names, but will be overriden by
method-specific arguments from \code{pt_method_args}, \code{ci_method_args}, and \code{multiple_methods}.}
}
\value{
A list containing:
\item{\code{pt_est}}{point estimate of entropy}
\item{\code{ci}}{bounds of the confidence interval}
If multiple methods are used, the result is a list of lists, each matching the structure of the single-method output.
}
\description{
This function calculates the Shannon entropy of a set of binned data using
specified point estimation and confidence interval (CI) methods.
}
\details{
This function computes Shannon entropy and its associated
confidence intervals. It supports various estimation methods, allowing
users to compute results for multiple methods simultaneously using the
\code{multiple_methods} argument. If no \code{multiple_methods} list is provided,
the function creates a single-method list based on the specified arguments.
}
\examples{
# Example bin counts
counts <- c(10, 20, 30, 40)

# Basic usage with default settings
shannon_entropy(counts)

# Specify point and CI methods
shannon_entropy(counts, pt_method = "ML", ci_method = "bootstrap_bca")

# Using multiple methods
methods <- list(
  list(pt_method = "ML", ci_method = "Wald"),
  list(pt_method = "MM", ci_method = "bootstrap_pct")
)
shannon_entropy(counts, pt_method = "multiple", ci_method = "multiple",
                multiple_methods = methods)

# Using multiple methods with the same point method
bin_counts <- 10*1:5
multiple_methods <- list(m1 = list(ci_method = "Wald",
                                   ci_method_args = list(z_score_dist = "normal")),
                         m2 = list(ci_method = "Wald_alt",
                                   ci_method_args = list(z_score_dist = "normal")))
shannon_entropy(bin_counts,
                pt_method = "MM",
                ci_method = "multiple",
                multiple_methods = multiple_methods)

# Using multiple methods with the same CI method
bin_counts <- 10*1:5
multiple_methods <- list(m1 = list(pt_method = "ML",
                                   pt_method_args = NULL),
                         m2 = list(pt_method = "MM",
                                   pt_method_args = NULL))
shannon_entropy(bin_counts,
                pt_method = "multiple",
                ci_method = "Wald_alt",
                multiple_methods = multiple_methods)

shannon_entropy(10*c(1, 7, 3), pt_method = "Dirichlet", ci_method = "Dirichlet")

shannon_entropy(c(10, 23, 14), pt_method = "Dirichlet", ci_method = "bootstrap_pct")

}
\seealso{
\code{\link[=entropy_pt_est]{entropy_pt_est()}}, \code{\link[=entropy_ci]{entropy_ci()}}
}
