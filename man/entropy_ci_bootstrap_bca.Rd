% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entropy_ci_bootstrap_bca.R
\name{entropy_ci_bootstrap_bca}
\alias{entropy_ci_bootstrap_bca}
\title{Bootstrap bias-corrected and accelerated (BCa) confidence interval for entropy estimators}
\usage{
entropy_ci_bootstrap_bca(
  bin_counts,
  pt_est_fct,
  B = 10^3,
  conf_level = 0.95,
  unit = c("log2", "ln", "normalize")
)
}
\arguments{
\item{bin_counts}{A numeric vector of bin counts representing the observed frequencies of discrete outcomes.}

\item{pt_est_fct}{A function to compute the point estimate of entropy. This function must take \code{bin_counts} as its sole argument and return the entropy estimate in bits as a scalar.}

\item{B}{An integer specifying the number of bootstrap samples to generate (default is \eqn{1000}).}

\item{conf_level}{A numeric value specifying the confidence level for the interval (default is \eqn{0.95}).}

\item{unit}{A character string specifying the unit of entropy. Options are \code{"log2"} (default), \code{"ln"}, or \code{"normalize"}. The result will be converted to the specified unit if needed.}
}
\value{
A list with the following components:
\item{ci}{A numeric vector of length 2 containing the lower and upper bounds of the confidence interval, expressed in the specified entropy unit.}
\item{pt_est}{The point estimate of entropy computed from the input \code{bin_counts}, expressed in the specified entropy unit.}
}
\description{
Computes the bias-corrected and accelerated (BCa) bootstrap confidence interval for an entropy estimator based on bin counts.
}
\examples{
# Define a simple entropy estimation function (e.g., Shannon entropy in bits)
shannon_entropy_fct <- function(bin_counts) {
  probs <- bin_counts / sum(bin_counts)
  probs <- probs[probs > 0] # Remove zero probabilities
  -sum(probs * log2(probs))
}

# Example bin counts
bin_counts <- c(10, 15, 25, 50)

# Compute BCa confidence interval for Shannon entropy
entropy_ci_bootstrap_bca(
  bin_counts = bin_counts,
  pt_est_fct = shannon_entropy_fct,
  B = 1000,
  conf_level = 0.95,
  unit = "log2"
)

}
