% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entropy_pt_est.R
\name{entropy_pt_est}
\alias{entropy_pt_est}
\title{Shannon entropy point estimation}
\usage{
entropy_pt_est(
  bin_counts,
  method = c("ML", "MM", "Dirichlet", "Jeffrey", "Laplace", "SG", "minimax", "multiple"),
  method_args = NULL,
  multiple_methods = NULL,
  unit = c("log2", "ln", "normalize"),
  ...
)
}
\arguments{
\item{bin_counts}{Vector of observed bin counts}

\item{method}{Entropy estimator}

\item{method_args}{List of arguments required for method}

\item{multiple_methods}{List with one element for each desired estimation. This element is itself a list of two elements: (i) the method (character) and (ii) a list of method arguments}

\item{unit}{Desired unit (\code{"log2"} for bits, \code{"ln"} for nats, and \code{"normalize"} for normalized entropy/evenness)}

\item{...}{Shared arguments. These will be passed to all entropy estimator functions with matching argument names, but will be overriden by method-specific arguments}
}
\value{
List of results of the entropy estimate(s). If \code{method = "multiple"}, the function returns a nested list where each primary element is the output from a user-specified \code{method}/\code{method_args} pair.
}
\description{
Shannon entropy point estimation
}
\examples{
entropy_pt_est(bin_counts = 1:4, method = "MM")

mult_methods_list <- list(
  m1 = list(method = "ML",
            method_args = NULL),
  m2 = list(method = "MM",
            method_args = NULL),
  m3 = list(method = "Dirichlet",
            method_args = list(Dir_alpha = 10))
)
entropy_pt_est(bin_counts = 1:20, method = "multiple", multiple_methods = mult_methods_list)

mult_methods_list <- list(
  m1 = list(method = "ML",
            method_args = NULL),
  m2 = list(method = "MM",
            method_args = NULL),
  m3 = list(method = "Dirichlet",
            method_args = NULL)
)
entropy_pt_est(bin_counts = 1:20,
               method = "multiple",
               multiple_methods = mult_methods_list)

entropy_pt_est(bin_counts = 1:20,
               method = "multiple",
               multiple_methods = mult_methods_list,
               Dir_alpha = 10) # Should be passed to Dirichlet estimator
}
